@page "/"
@page "/welcome"
@page "/deckentry"
@using DeckBuilderWASM.POCOs
@using System.Text.Json;
@inject Container container;
@inject NavigationManager navigation;
@inject HttpClient Http


<h3>Deck Eingabe</h3>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-2 mb-2">
            <button class="btn btn-secondary btn-sm" @onclick="OkButtonClick">OK</button>
        </div>
        <div class="col-md-3 mb-3">
        </div>
        <div class="col-md-1 mb-1">
            <div class="col-3 align-self-center"><InputFile OnChange="@OnInputFileChange" /></div>
        </div>
    </div>
    <div class="row">
        <div class="col-md5 mb5">
            @fehlermeldung
        </div>
    </div>
    <form>
        <div class="form-group">
            <label for="exampleTextarea" class="mt-2">Deckliste eingeben: z.B. 1 Shivan Dragon</label>
            <input type="text" class="form-control mb-3" @bind="deckname" placeholder="Deckname" aria-label="Username" aria-describedby="basic-addon1">
            <textarea class="form-control mb-3" id="exampleTextarea" @bind="deckinput" placeholder="Hier die Deckliste eingeben" rows="100"></textarea>
        </div>
        <button class="btn btn-secondary btn-sm" @onclick="OkButtonClick">OK</button>
    </form>
</div>



@code {
    string deckinput;
    string deckname;
    string fehlermeldung;

    private void OkButtonClick()
    {
        if (String.IsNullOrWhiteSpace(deckinput))
            return;
        container.Input = deckinput;
        container.DeckName = deckname;
        navigation.NavigateTo("/deckview");
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var files = e.GetMultipleFiles(1).Where(f => f.Name.EndsWith(".json")).ToList();
        if (files.Count != 1){
            this.fehlermeldung = "Es darf nur eine Datei ausgewählt werden.";
            return;
        }
        var file = files[0];
        try
        {
            using var s = file.OpenReadStream(40_388_608);
            var con = await JsonSerializer.DeserializeAsync<Container>(s);
            this.container.Input = con.Input;
            this.container.Data = con.Data;
            this.container.DeckName = con.DeckName;
            navigation.NavigateTo("/deckview");
        }
        catch (Exception ex)
        {
            this.fehlermeldung = "Falsches Format.";
        }
    }
}
